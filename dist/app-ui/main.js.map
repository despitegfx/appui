{"version":3,"sources":["./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/environments/environment.ts","./src/app/services/api.service.ts","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n  goToDashboard(){\n    this.router.navigate(['/dashboard']);\n\n  }\n\n}\n","<div class=\"wrapper\">\n    <div class=\"outline\">\n        <div class=\"outline-inner\">\n            <!-- Welcome text  -->\n            <h3>You Are <span class=\"trading-engine\">Welcome</span></h3>\n            <!-- Welcome text ends -->\n            <!-- link to the dashboard -->\n            <a routerLink=\"['./']\" (click)=\"goToDashboard()\">\n                <div class=\"dash-button\">\n                    <span class=\"dashboard\">GO TO DASHBOARD</span>\n                </div>\n            </a>\n            <!-- link to the dashboard ends -->\n        </div>\n    </div>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { CookieService } from 'ngx-cookie-service';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n\n    url_: string = \"https://trade-client-connectivity.herokuapp.com\";\n\n    constructor(private http: HttpClient, private cookieservice: CookieService) {}\n\n    getClientDetail(): Observable<any>{\n        return this.http.get(this.url_+'/client/get/'+this.getUserId());\n    }\n\n    idname:string;\n    setUserId(id: string){\n        this.cookieservice.set(this.idname, id);\n    }\n    getUserId(){\n        return this.cookieservice.get(this.idname);\n    }\n\n    logOut(){\n        this.cookieservice.deleteAll('/');\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { ApiService } from '../services/api.service';\nimport { Router } from '@angular/router';\nimport { ClientDetail, ClientOrders } from '../services/endpoint';\nimport { DatePipe, formatDate } from '@angular/common';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  \n  orderBringform: boolean;\n  clientdetail: ClientDetail;\n  whenclicked:boolean;\n  allOrders:string;\n  \n  getid=this.apiservice.getUserId();\n\n  orderId: string=\"dfsdh8934hb349348\";\n  userId: string=this.getid;\n  unitPrice:number;\n  tickerSymbol:string=\"\";\n  statusId: number;\n  quantity:number;\n  transactionId: number;\n  dateCreated: string = new Date().toString();\n  dateModified: string = new Date().toString();\n  orderTypeId: number;\n  \n  \n  //side: string=\"\";\n  constructor(private apiservice: ApiService, private router: Router) {}\n\n\n  ngOnInit(): void {\n    this.checklogin();\n    this.successfullyLogin();\n    this.onFetchOrder();\n  }\n\n  clicking(){\n    //this.orderBringform = true;\n  }\n\n  addProduct(){\n    //this.orderBringform = false;\n    // TODO: remove this\n    // console.log(\"hi sedem\");\n    // this.spawned_password = JSON.stringify(spawn.spawn());    \n    // console.log(this.spawned_password);\n  }\n\n  logout(){\n    this.apiservice.logOut();\n    this.checklogin();\n  }\n\n  checklogin(){\n    if (this.apiservice.getUserId()==null || this.apiservice.getUserId()==undefined || this.apiservice.getUserId()==\"\") {\n    this.router.navigate(['/login']);\n    }\n }\n\n  successfullyLogin(){\n    this.apiservice.getClientDetail()\n    .subscribe(data => {\n      this.clientdetail=data;\n    });\n  }\n\n  //order here\n  onOrder(){\n    this.orderBringform=true;\n  }\n\n  onSubmitOrder(){\n    if(this.tickerSymbol==\"\" || this.unitPrice==null || this.quantity==null ){//|| this.side==\"\") {\n      // TODO: remove this.error = true;\n  \n    } else {\n      \n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n     var raw = JSON.stringify({\n      \"orderId\":this.orderId,\n      \"userId\":this.userId,\n      \"unitPrice\":this.unitPrice,\n      \"tickerSymbol\":this.tickerSymbol,\n      \"statusId\":this.statusId,\n      \"quantity\":this.quantity,\n      \"transactionId\":this.transactionId,\n      \"dateCreated\":this.dateCreated,\n      \"dateModified\":this.dateModified,\n      \"orderTypeId\":this.orderTypeId\n    });\n\n    var options:RequestInit = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow',\n      mode: 'cors'\n    };\n  \n    fetch(\"https://trade-client-connectivity.herokuapp.com/submitOrder\", options)\n    .then(response => response.text())\n    .then(result => console.log(result))\n    .catch(error => console.log('error', error));\n    \n    }\n  }\n  \n\n  // fetch order details here\n  onFetchOrder(){\n\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n\n    var requestOptions:RequestInit = {\n      method: 'GET',\n      headers: myHeaders,\n      redirect: 'follow',\n      mode: 'no-cors'\n    };\n\n    fetch(\"https://trade-reporting-service.herokuapp.com/orders/all\", requestOptions)\n    .then(response => response.text())\n    .then(result => {\n      console.log(JSON.stringify(result));\n    })\n    .catch(error => console.log('error', error));\n      \n    \n    }\n  \n}\n","<div class=\"operation-container\">\n    <div class=\"buttons-cover\">\n        <a routerLink=\"['./']\" (click)=\"logout()\">\n            <div class=\"buttons\" style=\"background-color: red;\">\n                <span>Logout</span>\n            </div>\n        </a>\n    </div>\n    <div class=\"buttons-cover\">\n        <a routerLink=\"['./']\" (click)=\"onOrder()\">\n            <div class=\"buttons\">\n                <span>Order</span>\n            </div>\n        </a>\n    </div>\n    <div class=\"user-logo\">\n        <div class=\"userlogo\">\n            <span>{{ clientdetail['fname'].charAt(0) }}</span>\n        </div>\n    </div>\n    <div class=\"user\">\n        <div class=\"username\">\n            <span>{{ clientdetail['fname']+\" \"+clientdetail['lname'] }}</span>\n        </div>\n    </div>\n\n\n</div>\n<div class=\"outline\">\n    <div class=\"table-title\">\n        <span>Portfolio</span>\n        <a routerLink=\"['./']\" (click)=\"addProduct()\">\n            <div class=\"add-portfolio\">\n                <span>Add</span>\n            </div>\n        </a>\n    </div>\n\n\n    <a routerLink=\"['./']\"  class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Mac</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Emmanuel</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>HP Pavilion</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Desktop Machine</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Main Frame Computer</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Dell</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Mac</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Mac</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Emmanuel</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>HP Pavilion</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Desktop Machine</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Main Frame Computer</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Mac</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Emmanuel</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>HP Pavilion</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Desktop Machine</span>\n        </div>\n    </a>\n    <a routerLink=\"['./']\" class=\"pro\" (click)=\"clicking()\">\n        <div class=\"products\">\n            <span>Main Frame Computer</span>\n        </div>\n    </a>\n\n\n</div>\n\n\n<ng-template [ngIf]=\"whenclicked==true\" [ngIfElse]=\"none\">\n    \n        <div class=\"table-wrapper\">\n            <table width=\"80%\">\n                <thead>\n                    <th>Quantity</th>\n                    <th>Price</th>\n                    <th>Order Value</th>\n                </thead>\n                <tbody>\n                    <td>Apple</td>\n                    <td>10</td>\n                    <td>$1.5</td>\n                </tbody>\n                <tbody>\n                    <td>IBM</td>\n                    <td>5</td>\n                    <td>$3</td>\n                </tbody>\n                <tbody>\n                    <td>HP</td>\n                    <td>100</td>\n                    <td>$1</td>\n                </tbody>\n                <tbody>\n                    <td>Dell</td>\n                    <td>6</td>\n                    <td>$2</td>\n                </tbody>\n                <tfoot>\n                    <th>Quantity</th>\n                    <th>Price</th>\n                    <th>Order Value</th>\n                </tfoot>\n            </table>\n        </div>\n    </ng-template>\n\n    <div class=\"outline\">\n        <div class=\"table-title\">\n            <span>All Orders</span>\n        </div>\n        <div class=\"table-wrapper\" >\n            <table width=\"100%\">\n                <thead>\n                    <th>#</th>\n                    <th>Order ID</th>\n                    <th>Unit Price</th>\n                    <th>Ticker</th>\n                    <th>Status ID</th>\n                    <th>Quantity</th>\n                    <th>Transc. ID</th>\n                    <th>Created Date</th>\n                    <th>Modified Date</th>\n                    <th>Order Type ID</th>\n                    <!-- <th style=\"background-color: rgb(15, 173, 81);\">Side</th> -->\n                </thead>\n                <div *ngFor=\"let come of allOrders\">\n                <tbody>\n                    <td>4</td>\n                    <td>{{come.orderId}}</td>\n                    <td>{{come.userId}}</td>\n                    <td>{{come.unitPrice}}</td>\n                    <td>{{come.tickerSymbol}}</td>\n                    <td>{{come.statusId}}</td>\n                    <td>{{come.transactionId}}</td>\n                    <td>{{come.dateCreated}}</td>\n                    <td>{{come.dateModified}}</td>\n                    <td>{{come.orderTypeId}}</td>\n                    <!-- <td style=\"background-color: rgb(15, 173, 81);\">BUY</td> -->\n                </tbody>\n            </div>\n                <tfoot>\n                    <th>#</th>\n                    <th>Order ID</th>\n                    <th>Unit Price</th>\n                    <th>Ticker</th>\n                    <th>Status ID</th>\n                    <th>Quantity</th>\n                    <th>Transc. ID</th>\n                    <th>Created Date</th>\n                    <th>Modified Date</th>\n                    <th>Order Type ID</th>\n                    <!-- <th style=\"background-color: rgb(15, 173, 81);\">Side</th> -->\n                </tfoot>\n            </table>\n        </div>\n        <span style=\"color: darkcyan ;\">{{allOrders}}</span>\n    </div>\n\n<!-- adding to portfolio -->\n<ng-template [ngIf]=\"whenclicked==false\" [ngIfElse]=\"none\">\n    <div class=\"outline\">\n        <div class=\"addsome\">\n\n        </div>\n    </div>\n</ng-template>\n<!-- adding to portfolio ends -->\n\n\n<div class=\"outline\" *ngIf=\"orderBringform==true\">\n    <div class=\"addsome\">\n        <div class=\"table-title\">\n            <span>Make Order</span>\n        </div>\n        <form (ngSubmit)=\"onSubmitOrder()\"> \n            <select name=\"ticker\" [(ngModel)]=\"ticker\" >\n                <option value=\"MSFT\">MSFT</option>\n                <option value=\"NFLX\">NFLX</option>\n                <option value=\"GOOGL\">GOOGL</option>\n                <option value=\"APPL\">APPL</option>\n                <option value=\"TSLA\">TSLA</option>\n                <option value=\"IBM\">IBM</option>\n                <option value=\"ORCL\">ORCL</option>\n                <option value=\"AMZN\">AMZN</option>\n            </select>&nbsp;\n            <input type=\"text\" name=\"price\" [(ngModel)]=\"price\" placeholder=\"price\" ><br>\n            <input type=\"text\" name=\"quantity\" [(ngModel)]=\"quantity\" placeholder=\"quantity\">&nbsp;\n            <select name=\"side\" [(ngModel)]=\"side\" >\n                <option value=\"BUY\">Buy</option>\n                <option value=\"SELL\">Sell</option>\n            </select><br>\n            <button type=\"submit\">Submit</button>&nbsp;\n        </form>\n    </div>\n</div>\n\n\n<ng-template #none>\n\n</ng-template>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent{\n  title = 'app-ui';\n}\n","<header>\n    <div class=\"container\">\n        <a href=\"#\" class=\"logo\">Turntabl Trading Engine</a>\n        <nav>\n            <ul>\n                <li><a routerLink=\"/\">Home</a></li>\n                <li><a routerLink=\"login\">Login</a></li>\n                <li><a routerLink=\"signup\">Signup</a></li>\n            </ul>\n        </nav>\n    </div>\n</header>\n\n<div class=\"container\">\n    <router-outlet ></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { ApiService } from './services/api.service';\nimport { CookieService } from 'ngx-cookie-service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignupComponent,\n    HomeComponent,\n    DashboardComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule,\n    \n  ],\n  providers: [ApiService,CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Form } from '@angular/forms';\nimport { timer } from 'rxjs';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n\n  fname:string=\"\";\n  lname:string=\"\";\n  email:string=\"\";\n  cardDetails:string=\"\";\n  bankBalance:string=\"\";\n  password:string=\"\";\n  confirmPassword:string=\"\";\n\n  error:boolean;\n  incorrectError:boolean;\n  failed:boolean;\n\n  constructor(private router: Router) { }\n\n  ngOnInit(): void {\n  }\n\n\nonCreate(){\n  if(this.fname==\"\" || this.lname==\"\" || this.email==\"\" || this.cardDetails==\"\" || this.bankBalance==\"\" || this.password==\"\" || this.confirmPassword==\"\") {\n    this.error = true;\n\n  } else {\n    \n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/json\");\n\n  var raw = JSON.stringify({\"fname\":this.fname, \"lname\":this.lname, \"email\":this.email, \"password\": this.password, \n                            \"cardDetails\":this.cardDetails, \"bankBalance\":this.bankBalance, \"userPortfolio\":[] });\n  \n  var options:RequestInit = {\n    method: 'POST',\n    headers: myHeaders,\n    body: raw,\n    redirect: 'follow',\n    mode: 'cors'\n  };\n\n  let id;\n\n  fetch(\"https://trade-client-connectivity.herokuapp.com/client/create\", options)\n    .then(response => response.text())\n    .then(result => {\n      id = JSON.parse(result).id;\n    \n    if (id) {\n      this.error = false;\n      const numbers = timer(1000);\n      numbers.subscribe(call => this.router.navigate(['/login']));\n     \n    }else{\n      this.failed=true;\n    }\n      \n    }).catch(error => console.log('error', error));\n\n  }\n}\n  onGoToLogin(){\n    this.router.navigate(['/login']);\n  }\n\n}\n","<div class=\"main-container\">\n    <!-- form title/heading here -->\n    <div class=\"title\">\n        <span>Signup</span>\n    </div>\n    <!-- form title/heading ends -->\n    <!-- signup form here -->\n    <div class=\"form-items\">\n        <form (ngSubmit)=\"onCreate()\">\n            <!-- error/warning message -->\n            <div class=\"warning\" *ngIf=\"error==true\">\n                <span>All fields are required!!!</span>\n            </div>\n            <!-- success message -->\n            <div class=\"success\" *ngIf=\"error==false\">\n                <span>Successfully created</span>\n            </div>\n            <div class=\"warning\" *ngIf=\"failed==true\">\n                <span>Failed to create account, Something went wrong!!!</span>\n            </div>\n            <input type=\"text\" name=\"fname\" [(ngModel)]=\"fname\" placeholder=\"First Name\" />\n            <input type=\"text\" name=\"lname\" [(ngModel)]=\"lname\" placeholder=\"Last Name\" /><br>\n            <input type=\"email\" name=\"email\" [(ngModel)]=\"email\" placeholder=\"Email...\" required email #pass=\"ngModel\"/>\n            <input type=\"text\" name=\"cardDetails\" [(ngModel)]=\"cardDetails\" placeholder=\"Card Pin\"/><br>\n            <input type=\"text\" name=\"bankBalance\" [(ngModel)]=\"bankBalance\" placeholder=\"Bank Balance\"/>\n            <input type=\"password\" name=\"password\" [(ngModel)]=\"password\" placeholder=\"Password...\"  /><br>\n            <input type=\"password\" name=\"confirmPassword\" [(ngModel)]=\"confirmPassword\" placeholder=\"Confirm Password...\"/>\n            <button type=\"submit\" [disabled]=\"password!=confirmPassword\" [disabled]=\"!pass.valid\" >Signup</button>\n        </form>\n    </div>\n    <!-- signup form ends -->\n    <!-- login link here -->\n    <div class=\"link\">\n        <span>Already registered? <a routerLink=\"['./']\" (click)=\"onGoToLogin()\" >Login</a></span>\n    </div>\n    <!-- create account ends -->\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport {HomeComponent} from './home/home.component';\nimport {LoginComponent} from './login/login.component';\nimport {SignupComponent} from './signup/signup.component';\nimport {DashboardComponent} from './dashboard/dashboard.component';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'dashboard', component: DashboardComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\n\nexport class LoginComponent implements OnInit {\n  email:string=\"\";\n  password:string=\"\";\n\n  error:boolean;\n  incorrectError:boolean;\n  userId:any;\n  loginstatus:any;\n  internetError:string;\n\n  constructor(private apiservice: ApiService, private router: Router) {}\n\n  ngOnInit(): void {}\n\n  onSubmit(){    \n\n    if(this.email==\"\" || this.password==\"\"){\n      this.error=true;\n\n    }else{\n      this.error=false;\n\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n\n      var raw = JSON.stringify({\"email\":this.email,\"password\":this.password});\n      \n      var options:RequestInit = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow',\n        mode: 'cors'\n      };\n\n      let id;\n      let loginstatus;\n      fetch(\"https://trade-client-connectivity.herokuapp.com/client/login\", options)\n        .then(response => response.text())\n        .then(result => {\n          id = JSON.parse(result).userId;\n          loginstatus = JSON.parse(result).status;\n        \n         if (loginstatus==\"failed\") {\n           this.incorrectError=true;\n\n         } else if(loginstatus==\"authenticated\"){\n\n          this.incorrectError=true;\n          this.apiservice.setUserId(id);\n          this.router.navigate(['/dashboard']);\n         \n        }\n          \n        }).catch(error => this.internetError = \"Login failed, try again\");\n\n\n        \n      }\n\n      \n\n  }\n\n  signUp(){\n    this.router.navigate(['/signup']);\n  }\n\n  \n\n}\n","<div class=\"main-container\">\n    <!-- form title/heading here -->\n    <div class=\"title\">\n        <span>Login</span>\n    </div>\n    <!-- form title/heading ends -->\n    \n    <!-- login form here -->\n    <div>\n        <form class=\"form-items\" (ngSubmit)=\"onSubmit()\"> \n            <div class=\"warning\" *ngIf=\"error==true\">\n                <span>All fields are required!!!</span>\n            </div>\n            <div class=\"warning\" *ngIf=\"incorrectError==true\">\n                <span>Email/password is incorrect!!!</span>\n            </div>\n            <div class=\"warning\" *ngIf=\"internetError=='Login failed, try again' \">\n                <span>Login failed, check internet connection</span>\n            </div>\n            <input type=\"email\" name=\"email\" placeholder=\"Email...\" [(ngModel)]=\"email\" /><br>\n            <input type=\"password\" name=\"password\" placeholder=\"Password...\" [(ngModel)]=\"password\" /><br>\n            <button type=\"submit\" name=\"login\">Login</button><br>\n        </form>\n    </div>\n    <!-- login form ends -->\n    <!-- create account link here -->\n    <div class=\"link\">\n        <span>Don't have an account? \n            <a routerLink=\"['./']\" (click)=\"signUp()\" >Signup</a>\n        </span>\n        <!-- <hr> -->\n    </div>\n    \n    <!-- create account ends -->\n</div>","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}